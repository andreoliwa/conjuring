[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.8", "poetry-core>=1.0.8", "poetry-core>=1.1.0"]

[tool.black]
line-length = 120

[tool.commitizen]
# https://commitizen-tools.github.io/commitizen/changelog/#configuration
changelog_file = "docs/CHANGELOG.md"
changelog_incremental = true
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
update_changelog_on_bump = true
version = "0.7.0"
# https://commitizen-tools.github.io/commitizen/bump/#configuration
version_files = [
  "pyproject.toml:^version",
]

[tool.nitpick]
ignore_styles = [
  "py://nitpick/resources/any/commitlint",
  "py://nitpick/resources/any/git-legal",
  "py://nitpick/resources/javascript/package-json",
  "py://nitpick/resources/python/310",
  "py://nitpick/resources/python/311",
  "py://nitpick/resources/python/312",
  "py://nitpick/resources/python/38",
  "py://nitpick/resources/python/autoflake",
  "py://nitpick/resources/python/bandit",
  "py://nitpick/resources/python/flake8",
  "py://nitpick/resources/python/github-workflow",
  "py://nitpick/resources/python/isort",
  "py://nitpick/resources/python/pylint",
  "py://nitpick/resources/python/radon",
  "py://nitpick/resources/python/sonar-python",
  "py://nitpick/resources/python/tox",
]
# nitpick-start (auto-generated by "nitpick init --suggest" 0.34.0)
# Styles added to the Nitpick Style Library will be appended to the end of the 'style' key.
# If you don't want a style, move it to the 'ignore_styles' key.
# nitpick-end
style = [
  "py://nitpick/resources/any/codeclimate",
  "py://nitpick/resources/any/commitizen",
  "py://nitpick/resources/any/editorconfig",
  "py://nitpick/resources/any/pre-commit-hooks",
  "py://nitpick/resources/any/prettier",
  "py://nitpick/resources/markdown/markdownlint",
  "py://nitpick/resources/python/39",
  "py://nitpick/resources/python/absent",
  "py://nitpick/resources/python/black",
  "py://nitpick/resources/python/ipython",
  "py://nitpick/resources/python/mypy",
  "py://nitpick/resources/python/poetry",
  "py://nitpick/resources/python/poetry-editable",
  "py://nitpick/resources/python/poetry-venv",
  "py://nitpick/resources/python/pre-commit-hooks",
  "py://nitpick/resources/python/readthedocs",
  "py://nitpick/resources/shell/bashate",
  "py://nitpick/resources/shell/shellcheck",
  "py://nitpick/resources/shell/shfmt",
  "py://nitpick/resources/toml/toml-sort",
]

[tool.poetry]
authors = ["W. Augusto Andreoli <andreoliwa@gmail.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Topic :: Software Development",
]
description = "üêçü§ñ Reusable global Invoke tasks that can be merged with local project tasks"
documentation = "https://andreoliwa.github.io/conjuring/"
keywords = ["automation", "cli", "invoke", "python", "tasks"]
license = "MIT"
name = "conjuring"
readme = "docs/README.md"
repository = "https://github.com/andreoliwa/conjuring"
version = "0.7.0"

[tool.poetry.dependencies]
humanize = "*"
invoke = "*"
iterfzf = "*"
packaging = "*"
python = "^3.9"
requests = "*"
ruamel-yaml = "*"
tomlkit = "*"
tqdm = "*"
typer = "*"

[tool.poetry.dependencies.pylint]
optional = true
version = "*"

[tool.poetry.dev-dependencies]
ipdb = "*"
ipython = "*"

[tool.poetry.extras]
lint = ["pylint"]

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-datadir = "*"
pytest-mock = "*"

[tool.poetry.scripts]
conjuring = "conjuring.cli:app"

[tool.ruff]
# https://beta.ruff.rs/docs/settings/#ignore
ignore = [
  "ANN101", # Missing type annotation for ? in method
  "D105", # Missing docstring in magic method
  "D107", # Missing docstring in ?
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "ERA", # https://beta.ruff.rs/docs/rules/#eradicate-era
  "FBT001", # Boolean positional arg in function definition
  "FBT002", # Boolean default value in function definition
  "FBT003", # Boolean positional value in function call
  "FIX002", # Line contains TO DO, consider resolving the issue
  "TD001", # Invalid TO DO tag
  "TD002", # Missing author https://beta.ruff.rs/docs/rules/#flake8-todos-td
  "TD003", # Missing issue link on the line following this
]
# https://beta.ruff.rs/docs/settings/#line-length
line-length = 120
# https://beta.ruff.rs/docs/settings/#select
select = ["ALL"]
# https://beta.ruff.rs/docs/settings/#show-fixes
show-fixes = true
# https://beta.ruff.rs/docs/settings/#src
src = ["src"]
# https://beta.ruff.rs/docs/settings/#target-version
target-version = "py39"

# https://beta.ruff.rs/docs/rules/#flake8-quotes-q
[tool.ruff.flake8-quotes]
inline-quotes = "double"

# https://beta.ruff.rs/docs/rules/#mccabe-c90
[tool.ruff.mccabe]
# https://beta.ruff.rs/docs/settings/#max-complexity
max-complexity = 10

# https://beta.ruff.rs/docs/settings/#per-file-ignores
[tool.ruff.per-file-ignores]
# B008 Do not perform function call ? in argument defaults
# D100 Missing docstring in public module
# D103 Missing docstring in public function
# D104 Missing docstring in public package
# S101 Use of ? detected https://beta.ruff.rs/docs/rules/#flake8-bandit-s
"src/conjuring/cli.py" = ["B008"]
"tests/**" = ["D100", "D103", "D104", "S101"]

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
trailing_comma_inline_array = true
